<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header text-center bg-primary text-white">
                    <h4>User Registration</h4>
                </div>
                <div class="card-body">
                    <form id="registerForm" onsubmit="clientRegister(event)">

                        <!-- Name Fields -->
                        <div class="row gx-2 mb-3">
                            <div class="col-md-6">
                                <label for="first-name" class="form-label">First Name</label>
                                <input type="text" class="form-control" id="first-name" placeholder="Janny" required>
                            </div>
                            <div class="col-md-6">
                                <label for="last-name" class="form-label">Last Name</label>
                                <input type="text" class="form-control" id="last-name" placeholder="Doe" required>
                            </div>
                        </div>

                        <!-- Email -->
                        <div class="mb-3">
                            <label for="email" class="form-label">Email Address</label>
                            <input type="email" class="form-control" id="email" placeholder="janny@example.com"
                                required>
                        </div>

                        <!-- Password -->
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" placeholder="************"
                                required>
                        </div>

                        <!-- Confirm Password -->
                        <div class="mb-3">
                            <label for="confirm-password" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" id="confirm-password" placeholder="************"
                                required>
                        </div>

                        <!-- Address -->
                        <div class="mb-3">
                            <label for="address" class="form-label">Address</label>
                            <input type="text" class="form-control" id="address" placeholder="Main Street 123" required>
                        </div>

                        <div class="row gx-2 mb-3">
                            <!-- Postal Code -->
                            <div class="col-md-6">
                                <label for="postal-code" class="form-label">Postal Code</label>
                                <input type="text" class="form-control" id="postal-code" placeholder="12345" required>
                            </div>
                            <!-- City -->
                            <div class="col-md-6">
                                <label for="location" class="form-label">City</label>
                                <input type="text" class="form-control" id="location" placeholder="Amsterdam" required>
                            </div>

                        </div>
                        <div class="row gx-2 mb-3">
                            <!-- State / Province -->
                            <div class="col-md-6">
                                <label for="province" class="form-label">Province/State</label>
                                <input type="text" class="form-control" id="province" placeholder="North Holland"
                                    required>
                            </div>
                            <!-- Country -->
                            <div class="col-md-6">
                                <label for="country-name" class="form-label">Country</label>
                                <input type="text" class="form-control" id="country-name" placeholder="Netherlands"
                                    required>
                            </div>
                        </div>

                        <!-- Phone -->
                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="tel" class="form-control" id="phone" placeholder="+31 6 12345678">
                        </div>

                        <!-- Store -->
                        <div class="mb-3">
                            <label for="store-id" class="form-label">Select Store</label>
                            <select id="store-id" class="form-select" required>
                                {{#each stores}}
                                <option value="{{this.id}}">{{this.name}}</option>
                                {{/each}}
                            </select>
                        </div>

                        <!-- Terms -->
                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="terms" required>
                            <label for="terms" class="form-check-label">I agree to the Terms of Service</label>
                        </div>

                        <!-- Error & Success Alerts -->
                        <div id="errorMessage" class="alert alert-danger d-none" role="alert"></div>
                        <div id="successMessage" class="alert alert-success d-none" role="alert"></div>

                        <!-- Submit -->
                        <button type="submit" class="btn btn-primary w-100">Register</button>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    async function clientRegister(event) {
        event.preventDefault();

        const form = document.getElementById('registerForm');
        const submitBtn = form.querySelector('button[type="submit"]');
        const errorMessage = document.getElementById('errorMessage');
        const successMessage = document.getElementById('successMessage');

        submitBtn.disabled = true;
        submitBtn.textContent = 'Registering...';

        // hide alerts
        errorMessage.classList.add('d-none');
        successMessage.classList.add('d-none');

        // helper to get trimmed value
        const val = (id) => { return (document.getElementById(id) ? document.getElementById(id).value.trim() : ''); }

        const data = {
            firstName: val('first-name'),
            lastName: val('last-name'),
            email: val('email'),
            password: document.getElementById('password').value,
            confirmPassword: document.getElementById('confirm-password').value,
            address: val('address'),
            postalCode: val('postal-code'),
            city: val('location'),
            province: val('province'),
            countryName: val('country-name'),
            phone: val('phone'),
            storeId: document.getElementById('store-id').value,
            terms: document.getElementById('terms').checked
        };

        // basic client-side validation
        if (!data.terms) {
            errorMessage.textContent = 'You must agree to the Terms of Service.';
            errorMessage.classList.remove('d-none');
            submitBtn.disabled = false;
            submitBtn.textContent = 'Register';
            return;
        }

        if (data.password !== data.confirmPassword) {
            errorMessage.textContent = 'Passwords do not match.';
            errorMessage.classList.remove('d-none');
            submitBtn.disabled = false;
            submitBtn.textContent = 'Register';
            return;
        }

        try {
            const res = await fetch('/auth/register', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });

            // attempt to parse JSON response safely
            let result;
            try {
                result = await res.json();
            } catch {
                result = null;
            }

            if (!res.ok || result === null) {
                const msg = (result && (result.error || result.message)) || `Registration failed (${res.status}).`;
                throw new Error(msg);
            }

            // prefer explicit success flag if provided
            if (result && result.success === false) {
                throw new Error(result.error || result.message || 'Registration failed.');
            }
            successMessage.textContent = (result && result.message) || 'Registration successful! You can now login.';
            successMessage.classList.remove('d-none');
            form.reset();
            setTimeout(() => {
                window.location.replace('/auth/login');
            }, 3000);
        } catch (err) {
            errorMessage.textContent = err.message || 'An unexpected error occurred.';
            errorMessage.classList.remove('d-none');

        } finally {
            submitBtn.disabled = false;
            submitBtn.textContent = 'Register';
        }
    }
</script>